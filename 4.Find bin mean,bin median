import numpy as np


data = [11, 13, 13, 15, 15, 16, 19, 20,
        20, 20, 21, 21, 22, 23, 24, 30,
        40, 45, 45, 45, 71, 72, 73, 75]


bin_size = len(data) // 3
bins = [data[i:i + bin_size] for i in range(0, len(data), bin_size)]


smoothed_mean = [ [round(np.mean(b), 2)] * len(b) for b in bins ]


smoothed_median = [ [np.median(b)] * len(b) for b in bins ]

smoothed_boundary = []
for b in bins:
    min_b, max_b = b[0], b[-1]
    smoothed = [min_b if abs(x - min_b) <= abs(x - max_b) else max_b for x in b]
    smoothed_boundary.append(smoothed)


print("Original bins:")
for b in bins:
    print(b)

print("\n(a) Smoothing by Bin Mean:")
for b in smoothed_mean:
    print(b)

print("\n(b) Smoothing by Bin Median:")
for b in smoothed_median:
    print(b)

print("\n(c) Smoothing by Bin Boundaries:")
for b in smoothed_boundary:
    print(b)
